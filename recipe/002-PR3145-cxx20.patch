From 51561aab5a005bf3fcac3b765c4e203668c65105 Mon Sep 17 00:00:00 2001
From: "Garth N. Wells" <gnw20@cam.ac.uk>
Date: Fri, 1 Apr 2022 08:36:42 +0100
Subject: [PATCH] Syntax fix in declarations.

---
 bindings/CXX11/adios2/cxx11/Attribute.h | 6 +++---
 bindings/CXX11/adios2/cxx11/Variable.h  | 6 +++---
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/bindings/CXX11/adios2/cxx11/Attribute.h b/bindings/CXX11/adios2/cxx11/Attribute.h
index fd55ab0b5..931a3c7d4 100644
--- a/bindings/CXX11/adios2/cxx11/Attribute.h
+++ b/bindings/CXX11/adios2/cxx11/Attribute.h
@@ -43,8 +43,8 @@ class Attribute
      * attributes from IO:DefineAttribute<T> or IO:InquireAttribute<T>.
      * Can be used with STL containers.
      */
-    Attribute<T>() = default;
-    ~Attribute<T>() = default;
+    Attribute() = default;
+    ~Attribute() = default;
 
     /** Checks if object is valid, e.g. if( attribute ) { //..valid } */
     explicit operator bool() const noexcept;
@@ -74,7 +74,7 @@ class Attribute
     bool IsValue() const;
 
 private:
-    Attribute<T>(core::Attribute<IOType> *attribute);
+    Attribute(core::Attribute<IOType> *attribute);
     core::Attribute<IOType> *m_Attribute = nullptr;
 };
 
diff --git a/bindings/CXX11/adios2/cxx11/Variable.h b/bindings/CXX11/adios2/cxx11/Variable.h
index 9cce77c77..4d26281e2 100644
--- a/bindings/CXX11/adios2/cxx11/Variable.h
+++ b/bindings/CXX11/adios2/cxx11/Variable.h
@@ -141,10 +141,10 @@ class Variable
      * variables from IO:DefineVariable<T> or IO:InquireVariable<T>.
      * Can be used with STL containers.
      */
-    Variable<T>() = default;
+    Variable() = default;
 
     /** Default, using RAII STL containers */
-    ~Variable<T>() = default;
+    ~Variable() = default;
 
     /** Checks if object is valid, e.g. if( variable ) { //..valid } */
     explicit operator bool() const noexcept;
@@ -389,7 +389,7 @@ class Variable
     using Span = adios2::detail::Span<T>;
 
 private:
-    Variable<T>(core::Variable<IOType> *variable);
+    Variable(core::Variable<IOType> *variable);
     core::Variable<IOType> *m_Variable = nullptr;
 
     std::vector<std::vector<typename Variable<T>::Info>> DoAllStepsBlocksInfo();
